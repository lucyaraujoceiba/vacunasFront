{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst UNAUTHORIZED = 401;\nconst FORBIDDEN = 403;\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(router) {\n      this.router = router;\n    }\n\n    intercept(req, next) {\n      return next.handle(req).pipe(catchError(error => {\n        switch (error.status) {\n          case UNAUTHORIZED:\n            this.router.navigate(['/login']);\n            break;\n\n          case FORBIDDEN:\n            this.router.navigate(['/home']);\n            break;\n\n          default:\n            return throwError(error);\n        }\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}