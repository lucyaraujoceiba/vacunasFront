{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { HTTP_ERRORES_CODIGO } from './http-codigo-error';\nimport * as i0 from \"@angular/core\";\nexport let ManejadorError = /*#__PURE__*/(() => {\n  class ManejadorError {\n    constructor() {}\n\n    handleError(error) {\n      const mensajeError = this.mensajePorDefecto(error);\n      this.imprimirErrorConsola(mensajeError);\n    }\n\n    mensajePorDefecto(error) {\n      if (error instanceof HttpErrorResponse) {\n        if (!navigator.onLine) {\n          return HTTP_ERRORES_CODIGO.NO_HAY_INTERNET;\n        }\n\n        if (error.hasOwnProperty('status') && !error.error.hasOwnProperty('mensaje')) {\n          return this.obtenerErrorHttpCode(error.status);\n        }\n      }\n\n      return error;\n    }\n\n    imprimirErrorConsola(mensaje) {\n      const respuesta = {\n        fecha: new Date().toLocaleString(),\n        path: window.location.href,\n        mensaje\n      };\n\n      if (!environment.production) {\n        window.console.error('Error inesperado:\\n', respuesta);\n      }\n    }\n\n    obtenerErrorHttpCode(httpCode) {\n      if (HTTP_ERRORES_CODIGO.hasOwnProperty(httpCode)) {\n        return HTTP_ERRORES_CODIGO.PETICION_FALLIDA;\n      }\n\n      return HTTP_ERRORES_CODIGO[httpCode];\n    }\n\n  }\n\n  ManejadorError.ɵfac = function ManejadorError_Factory(t) {\n    return new (t || ManejadorError)();\n  };\n\n  ManejadorError.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ManejadorError,\n    factory: ManejadorError.ɵfac\n  });\n  return ManejadorError;\n})();","map":null,"metadata":{},"sourceType":"module"}