{"ast":null,"code":"import { NgModel } from '@angular/forms';\nimport { EMPTY, merge } from 'rxjs';\nimport { FORM_ERRORS } from '../errores/lista-errores';\nimport { ErrorCamposPlantillaComponent } from '../componente/error-campos-plantilla.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./mensaje-error-campos-contenedor.directive\";\nimport * as i2 from \"./mensaje-error-campos-submit.directive\";\nimport * as i3 from \"@angular/forms\"; // tslint:disable: directive-selector\n\nexport let MensajeErrorCamposDirective = /*#__PURE__*/(() => {\n  class MensajeErrorCamposDirective {\n    constructor(vcr, controlErrorContainer, form, errors, resolver, renderer, control) {\n      this.vcr = vcr;\n      this.form = form;\n      this.errors = errors;\n      this.resolver = resolver;\n      this.renderer = renderer;\n      this.control = control;\n      this.errores = {};\n      this.validacionInicial = true;\n      this.nombreClaseError = 'clase-invalido';\n      this.container = controlErrorContainer ? controlErrorContainer.vcr : null;\n      this.submit = this.form ? this.form.submit : EMPTY;\n    }\n\n    ngOnInit() {\n      this.agregarValidaciones();\n      this.escucharEstados();\n    }\n\n    ngAfterViewChecked() {\n      this.validarErrores();\n    }\n\n    ngOnDestroy() {\n      this.estado.unsubscribe();\n    }\n\n    agregarValidaciones() {\n      if (this.control instanceof NgModel && this.validaciones) {\n        this.control.control.setValidators(this.validaciones);\n      }\n    }\n\n    get formControl() {\n      return this.control.control;\n    }\n\n    pintarErrorEnPantalla(texto = null) {\n      try {\n        if (!this.componente) {\n          const factory = this.resolver.resolveComponentFactory(ErrorCamposPlantillaComponent);\n          this.componente = this.container.createComponent(factory);\n        }\n\n        this.componente.instance.text = texto;\n        this.claseError(true);\n      } catch (error) {}\n    }\n\n    claseError(aplicarClase) {\n      if (this.container) {\n        const contenedor = this.container.element.nativeElement;\n\n        if (aplicarClase) {\n          this.renderer.addClass(contenedor, this.nombreClaseError);\n        } else {\n          this.renderer.removeClass(contenedor, this.nombreClaseError);\n        }\n      }\n    }\n\n    validarErrores() {\n      try {\n        if (this.formControl.invalid && this.validarEstadoInicial) {\n          const primerValor = Object.keys(this.formControl.errors)[0];\n          const obtenerError = this.errors[primerValor];\n          const texto = this.errores[primerValor] || obtenerError(this.formControl.errors[primerValor]);\n          this.pintarErrorEnPantalla(texto);\n          this.claseError(true);\n        } else {\n          this.pintarErrorEnPantalla();\n          this.claseError(false);\n        }\n      } catch (error) {}\n    }\n\n    get validarEstadoInicial() {\n      if (this.validacionInicial) {\n        return this.validacionInicial;\n      } else {\n        return this.formControl.dirty || this.formControl.touched;\n      }\n    }\n\n    escucharEstados() {\n      this.estado = merge(this.submit, this.formControl.valueChanges).subscribe(() => this.validarErrores());\n    }\n\n  }\n\n  MensajeErrorCamposDirective.ɵfac = function MensajeErrorCamposDirective_Factory(t) {\n    return new (t || MensajeErrorCamposDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.MensajeErrorCamposContenedorDirective, 8), i0.ɵɵdirectiveInject(i2.MensajeErrorCamposSubmitDirective, 9), i0.ɵɵdirectiveInject(FORM_ERRORS), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.NgControl));\n  };\n\n  MensajeErrorCamposDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MensajeErrorCamposDirective,\n    selectors: [[\"\", \"ngModel\", \"\"], [\"\", \"formControlName\", \"\"], [\"\", \"formControl\", \"\"]],\n    inputs: {\n      errores: \"errores\",\n      validacionInicial: \"validacionInicial\",\n      validaciones: \"validaciones\"\n    }\n  });\n  return MensajeErrorCamposDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}